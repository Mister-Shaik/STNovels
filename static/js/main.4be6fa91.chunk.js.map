{"version":3,"sources":["actions/NavigationActions.js","actions/Types.js","Containers/NavBar.js","Components/Dashboard/DashSideNav.js","Components/ChapContent/SubComponents/Lists.js","actions/ChapterActions.js","Components/ChapContent/SubComponents/Sidenav.js","Components/ChapContent/SubComponents/Plots.js","Components/ChapContent/ChapSideNav.js","Containers/SideBar.js","Components/ChapContent/ChapterContent.js","Components/Dashboard/SubComponents/NovelStats.js","Components/Dashboard/SubComponents/NovelList.js","Components/Dashboard/SubComponents/Dash.js","Components/Dashboard/SubComponents/Preferences.js","Components/Dashboard/SubComponents/Workspace.js","Components/Dashboard/Dashboard.js","Containers/MainContent.js","Containers/App.js","serviceWorker.js","reducers/NovelReducer.js","reducers/PreferencesReducer.js","reducers/UserReducer.js","reducers/NavigationReducer.js","reducers/Index.js","Store/Index.js","index.js"],"names":["opensideelement","dispatch","type","NavBar","className","style","Maxheight","backgroundColor","marginRight","flex","onClick","props","togglesidebar","marginLeft","CurrentPage","gotodashboard","gotonovel","Component","connect","state","SideMenuVisible","Navigation","DashSideNav","height","minWidth","Lists","Open","states","Object","keys","data","reduce","acc","curr","this","setState","final","name","x","map","vals","temp","data-toggle","data-target","Collapse","isOpen","el","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","key","getchapter","mapDispatchToProps","ChapterId","Sidenav","Plots","tmp_name","tmp_detail","names","detail","value","push","contentEditable","fontSize","SideElementVisible","ChapSideNav","SideBar","transition","width","mapStateToProps","ChapterContent","TitleChange","title","Title","target","React","createRef","Content","curse","autofill","cont","dat","lastIndexOf","substring","includes","replace","maxHeight","overflowY","outline","border","color","wordWrap","maxWidth","minHeight","innerRef","html","disabled","onChange","e","ContentChange","tagName","tc","split","length","NovelStats","novel","words","chapters","time","cword","cchap","ctime","NovelList","list","console","log","Dash","useStyles","makeStyles","theme","container","display","flexWrap","flexDirection","textField","spacing","dense","marginTop","menu","Preferences","classes","useState","mode","chapNums","indent","cursewords","email","values","setValues","handleChange","event","oldValues","handlecheck","checked","FormControl","InputLabel","htmlFor","Select","displayEmpty","MenuItem","FormControlLabel","control","Switch","plotToolbar","label","noValidate","autoComplete","TextField","margin","variant","href","Workspace","class","listStyle","aria-expanded","aria-controls","Dashboard","Current","MainContent","App","Boolean","window","location","hostname","match","initialState","AllNovels","Id","NovelName","Chapters","Name","ActiveNovel","CreatedOn","LastEdited","Trackers","TrackerName","Elements","ActiveChapter","Reducer","action","assign","NovelsList","val","Novel","filter","NovelId","WritingMode","FontSize","CurseWords","AutoIndent","AutoFill","ChapNumbers","UserId","UserName","UserEmail","CurrentOption","CurrentNovel","payload","combineReducers","Novels","NovelReducer","PreferencesReducer","User","UserReducer","NavigationReducer","routing","routerReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4be6fa91.chunk.js","sourcesContent":["import {OpenSideElement, ToggleSideBar, GotoNovel, GotoDashboard, DashboardNav} from './Types';\r\n\r\nexport const togglesidebar = () => {\r\n    return dispatch => {\r\n        dispatch({type: ToggleSideBar});\r\n    };\r\n};\r\n\r\nexport const opensideelement = () => {\r\n    return dispatch => {\r\n        dispatch({type: OpenSideElement});\r\n    };\r\n};\r\n\r\nexport const gotonovel = () => {\r\n    return dispatch => {\r\n        dispatch({type: GotoNovel});\r\n    };\r\n};\r\n\r\nexport const gotodashboard = () => {\r\n    return dispatch => {\r\n        dispatch({type: GotoDashboard});\r\n    };\r\n};\r\n\r\nexport const dashboardnav = (option) => {\r\n    return dispatch => {\r\n        dispatch({type: DashboardNav, option});\r\n    };\r\n};","export const AddNovel = 'AddNovel';\r\nexport const GetNovelNames = 'GetNovelNames';\r\nexport const GetAllNovels = 'GetAllNovels';\r\nexport const GetNovelStats = 'GetNovelStats';\r\nexport const GetNovel = 'GetNovel';\r\nexport const DeleteNovel = 'DeleteNovel';\r\n\r\nexport const AddChapter = 'AddChapter';\r\nexport const GetChapter = 'GetChapter';\r\nexport const UpdateChapter = 'UpdateChapter';\r\nexport const DeleteChapter = 'DeleteChapter';\r\n\r\nexport const AddPlot = 'AddPlot';\r\nexport const GetPlot = 'GetPlot';\r\nexport const UpdatePlot = 'UpdatePlot';\r\nexport const DeletePlot = 'DeletePlot';\r\n\r\nexport const AddTracker = 'AddTracker';\r\nexport const AddTrackerElement = 'AddTrackerElement';\r\nexport const GetTrackerElement = 'GetTrackerElement';\r\nexport const UpdateTrackerElement = 'UpdateTrackerElement';\r\nexport const DeleteTracker = 'DeleteTracker';\r\nexport const DeleteTrackerElement = 'DeleteTrackerElement';\r\n\r\nexport const UpdatePreferences = 'UpdatePreferences';\r\nexport const GetPreferences = 'GetPreferences';\r\n\r\nexport const ToggleSideBar = 'ToggleSideBar';\r\nexport const OpenSideElement = 'OpenSideElement';\r\nexport const GotoNovel = 'GotoNovel';\r\nexport const GotoDashboard = 'GotoDashboard';\r\nexport const DashboardNav = 'DashboardNav';\r\n\r\nexport const GetUser = 'GetUser';\r\nexport const ChangePassword = 'ChangePassword';\r\nexport const SignOut = 'SignOut';","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {togglesidebar, gotonovel, gotodashboard} from '../actions/NavigationActions';\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pv1 ph3 flex white\" style={{Maxheight:\"60px\", backgroundColor:\"#252a34\"}}>\r\n                <div className=\"flex align-self-center justify-content-start\" style={{marginRight:\"auto\",flex:\"1\"}}>\r\n                    <i className=\"pr4 fa fa-bars fa-2x\" onClick={() => this.props.togglesidebar()} />\r\n                    <h3 className=\"ma0\">STNovels</h3>\r\n                </div>\r\n                <div className=\"flex align-self-center justify-content-center\" style={{flex:\"1\"}}>\r\n                    <h4 className=\"pa2\">Welcome</h4>\r\n                </div>\r\n                <div className=\"flex align-self-center justify-content-end\" style={{marginLeft:\"auto\",flex:\"1\"}}>\r\n                <i className=\"fa fa-gear fa-2x\" onClick={() => {this.props.CurrentPage === \"Novel\"?this.props.gotodashboard():this.props.gotonovel()}}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    SideMenuVisible: state.Navigation.SideMenuVisible,\r\n    CurrentPage: state.Navigation.CurrentPage,\r\n});\r\n\r\nexport default connect(mapStateToProps, {togglesidebar, gotodashboard, gotonovel })(NavBar);","import React, { Component } from 'react';\r\n\r\nclass DashSideNav extends Component {\r\n\r\n      // Use Navlinks for side dash nav\r\n      // Wrap div and h4\r\n      // when link is clicked it has class active\r\n      // .active > div{ visibility: visible}\r\n      // .active > 1stparent { background: gray} \r\n      // initially all of them will have visibility hidden \r\n    render() {\r\n        return (\r\n            <div className=\"pv3 w-100 bg-white\" style={{height:\"20px\"}}>\r\n                  <div className=\"flex hover-bg-light-gray w-spc-nowrap\">\r\n                        <div className=\"bg-blue mr3 visible-hidden\" style={{minWidth:\"5px\"}}/>    \r\n                        <h4 className=\"pl4 pv3\"><i className=\"fa fa-desktop pr2\"/> Dashboard</h4>\r\n                  </div>\r\n                  <div className=\"flex hover-bg-light-gray w-spc-nowrap\">\r\n                        <div className=\"bg-blue mr3 visible-hidden\" style={{minWidth:\"5px\"}}/>                        \r\n                        <h4 className=\"pl4 pv3\"><i className=\"fa fa-book pr2\"/> Workspace</h4>\r\n                  </div>\r\n                  <div className=\"flex hover-bg-light-gray w-spc-nowrap\">\r\n                        <div className=\"bg-blue mr3 visible-hidden\" style={{minWidth:\"5px\"}}/>    \r\n                        <h4 className=\"pl4 pv3\"><i className=\"fa fa-edit pr2\"/> Preferences</h4>\r\n                  </div>\r\n                  <div className=\"flex hover-bg-light-gray w-spc-nowrap\">\r\n                        <div className=\"mr3 visible-hidden\" style={{minWidth:\"5px\"}}/>    \r\n                        <h4 className=\"pl4 pv3\"><i className=\"fa fa-sign-out pr2\"/> Signout</h4>\r\n                  </div>\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashSideNav;","import React, { Component } from 'react';\r\nimport data from '../../../Files/data.json';\r\nimport {Collapse} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux'\r\nimport {opensideelement} from '../../../actions/NavigationActions'\r\nimport {getchapter} from '../../../actions/ChapterActions'\r\n\r\nclass Lists extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Open : false,\r\n            states : {}\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let states = Object.keys(data[\"Trackers\"]).reduce((acc, curr) => \r\n        {acc[curr] = false;\r\n         return acc }, {});\r\n        this.setState({states:states});\r\n        \r\n    }\r\n\r\n    render() {\r\n        let final;\r\n        if(this.props.name === \"Trackers\")\r\n        {\r\n            let x = data[this.props.name];\r\n            let values = Object.keys(x);\r\n            final = values.map(vals => (\r\n                <div>\r\n                    <h5 className=\"mt0 pl3 pa2 shadow-5 w-spc-nowrap chap-tracker-c\" onClick={() => {let temp = this.state.states; temp[vals] = !temp[vals]; this.setState({states : temp})}}>- {vals} <i className=\"fa fa-plus-circle fa-1x fr\"  data-toggle=\"modal\" data-target={\"#\" + vals}></i></h5>\r\n                    \r\n                    <Collapse isOpen={this.state.states[vals]}>\r\n                        {Object.keys(x[vals]).map(el => (<h5 className=\"pl3 gray hover-bg-light-gray pl4 overflow-x-hidden w-spc-nowrap\">{x[vals][el]}</h5>))}\r\n                    </Collapse>\r\n                    \r\n                    <div className=\"modal fade\" id={vals} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"x\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"x\">{vals}</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body center\">\r\n                            <label>Name : </label>\r\n                            <input type=\"text\" className=\"btn ma2\" placeholder=\"Type here\" />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n            ))\r\n        }\r\n        else{\r\n            let x = data[this.props.name];\r\n            let keys = Object.keys(x);\r\n            final = keys.map(key => (<h5 className=\"mv0 pl3 gray hover-bg-light-gray pv1 w-spc-nowrap\" onClick={() => {this.props.name === \"Plots\"?this.props.opensideelement():this.props.getchapter()}}> {x[key]}</h5>));\r\n        }\r\n\r\n        return (\r\n            <div> \r\n                {final}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    opensideelement,\r\n    getchapter\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Lists);","import {AddChapter, GetChapter, UpdateChapter, DeleteChapter} from './Types'\r\n\r\nexport const addchapter = (name) => {\r\n    return dispatch => {\r\n        dispatch({type: AddChapter, Name: name});\r\n    };\r\n};\r\n\r\nexport const getchapter = (ChapterId) => {\r\n    return dispatch => {\r\n        dispatch({type: GetChapter, ChapterId:ChapterId});\r\n    };\r\n};\r\n\r\nexport const updatechapter = (ChapterId, content) => {\r\n    return dispatch => {\r\n        dispatch({type: UpdateChapter, Chapter: {ChapterId:ChapterId, content:content}});\r\n    };\r\n};\r\n\r\nexport const deletechapter = (ChapterId) => {\r\n    return dispatch => {\r\n        dispatch({type: DeleteChapter, Id: ChapterId});\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Lists from './Lists';\r\n\r\nclass Sidenav extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mb2 overflow-y-auto overflow-x-hidden\">\r\n                <h5 className=\"pa2 shadow-1 white chap-sidenav-c\">\r\n                    {this.props.name}\r\n                </h5>\r\n                <Lists name={this.props.name}/>\r\n                <button type=\"button\" className=\"btn hover-bg-light-gray center w-100 pa1 pt2 w-spc-nowrap\" data-toggle=\"modal\" data-target={\"#\" + this.props.name}>\r\n                <i className=\"fa fa-plus-circle fa-1x\"></i> Add\r\n                </button>\r\n\r\n\r\n                <div className=\"modal fade\" id={this.props.name} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{this.props.name}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body center\">\r\n                        <label>Title : </label>\r\n                        <input type=\"text\" className=\"btn ma2\" placeholder=\"Type here\" />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidenav;","import React, { Component } from 'react'\r\nimport {Table} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {opensideelement} from '../../../actions/NavigationActions'\r\n\r\nclass Plots extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            tmp_name:\"\",\r\n            tmp_detail:\"\",\r\n            names : [{name:\"Name\",detail:\"Bruce Lee\"}]\r\n        }\r\n    }\r\n\r\n    handleAdd(){\r\n        if(this.state.tmp_name === \"\")\r\n        {\r\n            return;\r\n        }\r\n        let value = this.state.tmp_name;\r\n        let detail = this.state.tmp_detail;\r\n        let temp = this.state.names;\r\n        temp.push({name:value,detail:detail});\r\n        this.setState({tmp_name:\"\",tmp_detail:\"\",names:temp});\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let AsideData;\r\n        if(true){\r\n            AsideData = \r\n            <div className=\"bg-gray light-gray\" style={{height:\"89vh\"}}>\r\n                <div className=\"pa2 bg-blue white\">\r\n                    <h4 className=\"ma0 w-spc-nowrap\">\r\n                    <i className=\"fa fa-chevron-left pr3 fa-1x w-spc-nowrap\" onClick={() => {this.props.opensideelement()}}></i>\r\n                    Tian Long\r\n                    </h4>\r\n                </div>\r\n                <div className=\"overflow-auto\">\r\n                        <p className=\"pa2\" contentEditable=\"true\" style={{fontSize:\"19px\"}} placeholder=\"Write Text Here\">simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                </div>\r\n            </div>;\r\n        } \r\n        else{\r\n            let arr = this.state.names;\r\n            let details = arr.map(el => {\r\n                return(\r\n                <tr>\r\n                    <th style={{textAlign:\"right\"}}>{el.name} : </th>\r\n                    <td className=\"w-spc-nowrap tl\" colspan=\"2\">{el.detail}\r\n                    <i className=\"fa fa-times fr\" onClick={() => {\r\n                        let arr = this.state.names;\r\n                        let names = arr.filter(check => check !== el);\r\n                        this.setState({names:names})}}></i>\r\n                    </td>\r\n                    \r\n                </tr>\r\n                )\r\n            }\r\n            );\r\n            \r\n            AsideData = \r\n            <div className=\"bg-white \" style={{height: \"89vh\"}}>\r\n                <div className=\"pa2 bg-blue white\">\r\n                    <h4 className=\"ma0\">\r\n                    {this.props.name}\r\n                    <i className=\"fa fa-times fa-1x fr\"></i>\r\n                    </h4>\r\n                </div>\r\n                <Table className=\"m-auto\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"tr\">Attribute</th>\r\n                            <th className=\"tl\" colspan=\"2\">Value<i className=\"fa fa-trash fr\"></i></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {details}\r\n                    </tbody>\r\n                </Table>\r\n                <div className=\"tc pt4\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"tl outline btn ma2\" \r\n                        placeholder=\"Attribute Name\" \r\n                        value={this.state.tmp_name} \r\n                        onKeyPress={e => {if(e.key === \"Enter\"){this.handleAdd()}}}\r\n                        onChange={(evt) => this.setState({tmp_name:evt.target.value})} />\r\n                        \r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"tl outline btn ma2\" \r\n                        placeholder=\"Attribute Value\" \r\n                        value={this.state.tmp_detail} \r\n                        onKeyPress={e => {if(e.key === \"Enter\" && this.state.tmp_name !== \"\"){this.handleAdd()}}}\r\n                        onChange={(evt) => this.setState({tmp_detail:evt.target.value})} />\r\n                    <br/><button type=\"button\" className=\"btn hover-bg-light-gray center w-30  pa1 pt2\" onClick={() => this.handleAdd()}>\r\n                    <i className=\"fa fa-plus-circle fa-1x\"></i> Add\r\n                    </button>\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            AsideData\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    SideElementVisible: state.Navigation.SideElementVisible\r\n});\r\n\r\nexport default connect(mapStateToProps, {opensideelement})(Plots);","import React, { Component } from 'react'\r\nimport Sidenav from './SubComponents/Sidenav'\r\nimport Plot from './SubComponents/Plots'\r\nimport {connect} from 'react-redux';\r\n\r\nclass ChapSideNav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.SideElementVisible ? \r\n                <div>\r\n                <Sidenav name=\"Chapters\" />\r\n                <Sidenav name=\"Plots\" /> \r\n                <Sidenav name=\"Trackers\" />\r\n                </div>\r\n                :<Plot name=\"Tian Long\" /> \r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    SideElementVisible: state.Navigation.SideElementVisible\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChapSideNav);","import React, { Component } from 'react'\r\nimport DashSideNav from '../Components/Dashboard/DashSideNav'\r\nimport ChapSideNav from '../Components/ChapContent/ChapSideNav'\r\nimport {connect} from 'react-redux'\r\n\r\n    // If current page is set to Dashboard, show Dasboard side navigation\r\n    // else display Side nav and trackers\r\n    // If sidenav or trackers clicked, Replace the side navigation to the item data\r\nclass SideBar extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"pr0 db overflow-y-auto overflow-x-hidden shadow bg-white\" style={{height:\"calc(100vh - 62px)\",transition:\"0.8s\",width:this.props.SideMenuVisible === true ? \"35%\":\"0\"}}>\r\n                {this.props.CurrentPage === \"Novel\"?<ChapSideNav /> : <DashSideNav />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    SideMenuVisible : state.Navigation.SideMenuVisible,\r\n    CurrentPage: state.Navigation.CurrentPage\r\n})\r\n\r\nSideBar = connect(mapStateToProps)(SideBar); \r\nexport default connect(mapStateToProps)(SideBar);","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport '../Content.css'\r\n\r\nclass ChapterContent extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.contentEditable = React.createRef();\r\n        this.state = {\r\n            Title: \"\",\r\n            Content: \"Start Typing Here\",\r\n            curse:true,\r\n            autofill:true\r\n        };\r\n    } \r\n      \r\n    componentWillMount()\r\n    {\r\n        // set Title from the Chapters \r\n        this.setState({Title:this.props.name});\r\n    }\r\n\r\n    TitleChange = title => {\r\n        this.setState({Title: title.target.value});\r\n    };\r\n\r\n    // On content change\r\n    ContentChange(cont) {\r\n        let temp = cont.target.value;\r\n        let arr = [\"name\", \"anyone\"]\r\n        let dat = [\"bitch\"];\r\n        \r\n        // check for escape string\r\n        let name = temp.lastIndexOf(\"%\") !== -1 ? temp.substring(temp.lastIndexOf(\"@\") + 1, temp.lastIndexOf(\"%\")) : \"\";\r\n        \r\n        // change escape string with the specified tracker info\r\n        if(arr.includes(name) && this.state.autofill)\r\n        {\r\n            this.setState({Content:temp.replace(\"@\"+name+\"%\",\"Shaik sha vali\")});\r\n            return;\r\n        }\r\n\r\n        // check if curse words is switched on\r\n        if(this.state.curse)\r\n        {\r\n            for(var x in dat)\r\n            {\r\n                this.setState({Content:temp.replace(dat[x],\"bi**h\")});\r\n                return;\r\n            }\r\n        }\r\n        // update state\r\n        this.setState({Content: temp});\r\n    };\r\n\r\n\r\n    render() {\r\n        let tc = \"g-t-c \";\r\n        let fs = \"22px\";\r\n        return (\r\n            <div style={{maxHeight:\"calc(100vh - 100px)\",overflowY:\"auto\"}}>\r\n                <div className=\"br4 w-90 pa4 pt5 center\" onClick={() => {if(this.state.Content === \"\"){this.setState({Content:\"Start Typing Here\"})}}}>\r\n                    <div className=\"tc\">\r\n                        <input className={\"f2 tc w-100 \" + tc} style={{outline:\"none\", border: \"none\", color:\"#4E4E4E\", backgroundColor: \"inherit\"}} type=\"text\" placeholder=\"Title Here\"></input>\r\n                        <p className=\"dark-gray\">__________________________</p>\r\n                    </div>\r\n                    <div className=\"pt4 ph3\" style={{wordWrap:\"break-word\"}}>\r\n                        <ContentEditable\r\n                        style={{outline:\"none\",maxWidth:\"70vw\",minHeight:\"45vh\",fontSize:fs}}\r\n                        onClick={() => {\r\n                            if(this.state.Content === \"Start Typing Here\" )\r\n                            {\r\n                                this.setState({Content:\"\"});\r\n                            }\r\n                        }\r\n                        }\r\n                        innerRef={this.contentEditable}\r\n                        html={this.state.Content} // innerHTML of the editable div\r\n                        disabled={false}       // use true to disable editing\r\n                        onChange={(e) => this.ContentChange(e)} // handle innerHTML change\r\n                        tagName='p' // Use a custom HTML tag (uses a div by default)\r\n                        className={tc + \" center\"}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"fixed-bottom tc ml0 mt2 center w-25\">\r\n                        <h5>Word Count : {this.state.Content.replace(/<[^>]+>/g, ' ').replace(/\\s+/gi,' ').split(' ').length}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ChapterContent;","import React, { Component } from 'react';\r\n\r\nclass NovelStats extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            novel:\"\",\r\n            words:[1002,5202,10253],\r\n            chapters:[22,12,18],\r\n            time:[[5,63],[6,24],[25,66]],\r\n            cword:0,\r\n            cchap:0,\r\n            ctime:0\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"pt2 pb2 ph4 flex flex-wrap justify-content-between\">\r\n                <div className=\"w-30 pt4 pb2 ph3 br2 card mr3 mv3\">\r\n                    <div className=\"pv2\">\r\n                        <div className=\"fr\">\r\n                            <select className=\"select-css\" onChange={e => this.setState({cword:e.target.value})}>\r\n                                <option value=\"0\">Today</option>\r\n                                <option value=\"1\">Last week</option>\r\n                                <option value=\"2\">Last Month</option>\r\n                            </select>\r\n                        </div>\r\n                        <p>WORD COUNT</p>\r\n                    </div>\r\n                    <div className=\"tc\">\r\n                        <h2 className=\"f2 pv2\">{this.state.words[this.state.cword]}</h2>\r\n                        <p className=\"fr pt4\">0.0%</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-30 pt4 pb2 ph3 br2 card mr3 mv3\">\r\n                    <div className=\"pv2\">\r\n                        <div className=\"fr\">\r\n                            <select className=\"select-css\" onChange={e => this.setState({cchap:e.target.value})}>\r\n                                <option value=\"0\">All</option>\r\n                                <option value=\"1\">Last week</option>\r\n                                <option value=\"2\">Last Month</option>\r\n                            </select>\r\n                        </div>\r\n                        <p>TOTAL CHAPTERS</p>\r\n                    </div>\r\n                    <div className=\"tc\">\r\n                        <h2 className=\"f2 pv2\">{this.state.chapters[this.state.cchap]}</h2>\r\n                        <p className=\"fr pt4\">0.0%</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-30 pt4 pb2 ph3 br2 card mr3 mv3\">\r\n                    <div className=\"pv2\">\r\n                        <p>Avg WORDS / CH</p>\r\n                    </div>\r\n                    <div className=\"tc\">\r\n                        <h2 className=\"f2 pv2\">232</h2>\r\n                        <p className=\"fr pt4\">0.0%</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-30 pt4 pb2 ph3 br2 card mr3 mv3\">\r\n                    <div className=\"pv2\">\r\n                        <div className=\"fr\">\r\n                            <select  className=\"select-css\" onChange={e => this.setState({ctime:e.target.value})}>\r\n                                <option value=\"0\">Today</option>\r\n                                <option value=\"1\">This Month</option>\r\n                                <option value=\"2\">This Year</option>\r\n                            </select>\r\n                        </div>\r\n                        <p>Total</p>\r\n                    </div>\r\n                    <div className=\"pv2 tc\">\r\n                        <h2>{this.state.time[this.state.ctime][0]} <span className=\"f3\">hrs</span> {this.state.time[this.state.ctime][1]} <span className=\"f3\">mins</span></h2>\r\n                        <p className=\"gray fr pt4\"><abbr title=\"Total Time Spent on Writing the Novel\">?</abbr></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NovelStats;","import React, { Component } from 'react';\r\n\r\nclass NovelList extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            list:[\"hiaw\",\"avl\"]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ph4 pv3\">\r\n                <div className=\"tc card pa3 f3\">\r\n                    <select style={{border:\"none\",minWidth:\"150px\"}} onChange={(e) => {console.log(e.target.value)}}>\r\n                        {this.state.list.map(novel => \r\n                            <option value={novel} key={novel}>{novel}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NovelList;","import React, { Component } from 'react';\r\nimport NovelStats from './NovelStats';\r\nimport NovelList from './NovelList';\r\n\r\nclass Dash extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"pv2 mt3 ph4\">\r\n                    <h4>Welcome back!</h4>\r\n                    <h2>Shaik sha</h2>\r\n                </div>\r\n                <NovelList novel=\"HIAN\" />\r\n                <NovelStats novel=\"HIAN\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dash;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexDirection:\"column\"\r\n      },\r\n    textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n    marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n    width: 200,\r\n    },\r\n}));\r\n\r\n  export default function Preferences() {\r\n\r\n    const classes = useStyles();\r\n        const [values, setValues] = React.useState({\r\n            mode:\"day\",\r\n            fontSize:18,\r\n            chapNums:false,\r\n            indent:false,\r\n            cursewords: false,\r\n            autofill: true,\r\n            name:\"Shaik sha\",\r\n            email:\"mr.shaiksha@gmail.com\"\r\n          });\r\n\r\n        function handleChange(event) {\r\n            setValues(oldValues => ({\r\n                ...oldValues,\r\n                [event.target.name]: event.target.value,\r\n            }));\r\n        }\r\n        \r\n        const handlecheck = name => event => {\r\n            setValues({ ...values, [name]: event.target.checked });\r\n          };\r\n\r\n        return (\r\n            <div className=\"flex justify-around pa3\">\r\n                <div className=\"w-50 mh2 pv4 ph3 card h-100\">\r\n                    <h4>Editor Settings</h4>\r\n                    <div className=\"border mv2 w-100\" />\r\n                    <form className=\"pa3 flex flex-column flex-wrap mw9\">\r\n                        <FormControl className=\"pv4\">\r\n                            <InputLabel htmlFor=\"mode\">Writing Mode</InputLabel>\r\n                            <Select\r\n                            value={values.mode}\r\n                            onChange={handleChange}\r\n                            displayEmpty\r\n                            name=\"mode\"\r\n                            className=\"pl3\"\r\n                            >\r\n                            <MenuItem value=\"day\">Day</MenuItem>\r\n                            <MenuItem value=\"evening\">Evening</MenuItem>\r\n                            <MenuItem value=\"night\">Night</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <div style={{minHeight:\"25px\"}} />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"fontSize\">Font Size</InputLabel>\r\n                            <Select\r\n                            value={values.fontSize}\r\n                            onChange={handleChange}\r\n                            displayEmpty\r\n                            name=\"fontSize\"\r\n                            className=\"pl3\"\r\n                            >\r\n                            <MenuItem value={10}>10</MenuItem>\r\n                            <MenuItem value={12}>12</MenuItem>\r\n                            <MenuItem value={14}>14</MenuItem>\r\n                            <MenuItem value={16}>16</MenuItem>\r\n                            <MenuItem value={18}>18</MenuItem>\r\n                            <MenuItem value={20}>20</MenuItem>\r\n                            <MenuItem value={22}>22</MenuItem>\r\n                            <MenuItem value={24}>24</MenuItem>\r\n                            </Select>\r\n                        </FormControl>  \r\n                        <div style={{minHeight:\"45px\"}} />   \r\n                        <FormControlLabel\r\n                            control={\r\n                            <Switch\r\n                                checked={values.plotToolbar}\r\n                                value={values.plotToolbar}\r\n                                onChange={handlecheck('cursewords')}\r\n                                name=\"cursewords\"\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Filter Curse/Bad words\"\r\n                        /> \r\n                        <FormControlLabel\r\n                            control={\r\n                            <Switch\r\n                                checked={values.plotToolbar}\r\n                                value={values.plotToolbar}\r\n                                onChange={handlecheck('autofill')}\r\n                                name=\"autofill\"\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Auto Fill tracker content into chapters using @TrackerName%\"\r\n                        /> \r\n                        <FormControlLabel\r\n                            control={\r\n                            <Switch\r\n                                checked={values.chapNums}\r\n                                value={values.chapNums}\r\n                                onChange={handlecheck('chapNums')}\r\n                                name=\"chapNums\"\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Display Chapter Numbers for Chapter Titles\"\r\n                        />   \r\n                        <FormControlLabel\r\n                            control={\r\n                            <Switch\r\n                                checked={values.indent}\r\n                                value={values.indent}\r\n                                onChange={handlecheck('indent')}\r\n                                name=\"indent\"\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Create Indents automatically for new paragraphs\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div className=\"w-50 mh2 pv4 ph3 card h-100\">\r\n                    <h4>Profile Settings</h4>\r\n                    <div className=\"border mv2 w-100\" />\r\n                    <form className={classes.container} noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                        value={values.name}\r\n                        className={classes.textField}\r\n                        label=\"Name\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        />\r\n                        <TextField\r\n                        value={values.email}\r\n                        className={classes.textField}\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        />\r\n                        <a className=\"ml2 mv2 btn btn-primary w-40\" href=\"/\">Change Password</a>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n}","import React, { Component } from 'react';\r\nimport '../../Content.css';\r\n\r\nclass Workspace extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mt5 mh4 bg-white\" >\r\n                <div className=\"pa3\">\r\n                    <h2>My Novels</h2>\r\n                </div>\r\n                <div className=\"border-top\">\r\n                    <ul className=\"pa0\">\r\n                        <li class=\"novel-list-item pa3 f4 border-top\" style={{listStyle: \"none\"}}>\r\n                            <div className=\"pa2 bg-dark-gray white br3\">\r\n                                <a className=\"white hover-white text-decoration-none\" href=\"/\">Novel Name</a>\r\n                                <span className=\"fr\">\r\n                                    <a className=\"list-del dark-gray ph4 text-decoration-none\" href=\"/\">Delete</a>\r\n                                    <i className=\"fa fa-plus f5 ph3\" data-toggle=\"collapse\" data-target=\"#Novel1\" aria-expanded=\"false\" aria-controls=\"Novel1\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <ul className=\"collapse\" style={{listStyle:\"none\"}} id=\"Novel1\">\r\n                                <li className=\"chapter-list-item hover-bg-light-gray pa2 br3\">\r\n                                    <a className=\"black text-decoration-none\" href=\"/\">- Chapter one</a>\r\n                                    <span className=\"fr\">\r\n                                        <a className=\"chap-del white ph4 text-decoration-none\" href=\"/\">Delete</a>\r\n                                        <i>21-5-2019 5:55:00AM</i>\r\n                                    </span>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Workspace;","import React, { Component } from 'react';\r\nimport Dash from './SubComponents/Dash';\r\nimport Preferences from './SubComponents/Preferences';\r\nimport Workspace from './SubComponents/Workspace';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Current:\"Preferences\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{maxHeight:\"calc(100vh - 60px)\",overflowY:\"auto\"}}>\r\n                {this.state.Current === \"Dash\"?<Dash />: this.state.Current === \"Preferences\" ? <Preferences /> : <Workspace />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport ChapterContent from '../Components/ChapContent/ChapterContent'\r\nimport Dashboard from '../Components/Dashboard/Dashboard'\r\nimport {connect} from 'react-redux'\r\n\r\nclass MainContent extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-100 glb-bg-c\">\r\n                {this.props.CurrentPage === \"Novel\" ? <ChapterContent /> : <Dashboard />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    CurrentPage: state.Navigation.CurrentPage,\r\n})\r\n\r\nMainContent = connect(mapStateToProps)(MainContent); \r\nexport default connect(mapStateToProps)(MainContent);","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport SideBar from './SideBar';\r\nimport MainContent from './MainContent';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  // Show Navbar, which has side bar control and settings button\r\n  // A flex which contains the Maincontent and side bar\r\n  // we can change the Main Content as Dashboard or Novel Writer, using Routes\r\n  render() {\r\n    return (\r\n        <div className={\"glb-f glb-bg-c h-vh-100 \"}>\r\n          <NavBar />\r\n            <div className=\"flex flex-row justify-center mr0\">\r\n              <SideBar />\r\n              <MainContent />\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {AddNovel, GetAllNovels, GetNovelNames, GetNovelStats, GetNovel, DeleteNovel,\r\n        AddChapter, GetChapter, UpdateChapter, DeleteChapter,\r\n        AddPlot, GetPlot, UpdatePlot, DeletePlot,\r\n        AddTracker, GetTrackerElement, AddTrackerElement, UpdateTrackerElement, DeleteTracker, DeleteTrackerElement} from '../actions/Types';\r\n\r\n\r\nconst initialState = {\r\n    AllNovels:[\r\n        {\r\n            Id:\"001\",\r\n            NovelName:\"Novel one\",\r\n            Chapters:[{Id:\"001\", Name:\"Chapter 1\"},{Id:\"002\", Name:\"Chapter 2\"},{Id:\"003\", Name:\"Chapter 3\"},{Id:\"004\", Name:\"Chapter 5\"}]\r\n        },\r\n        {\r\n            Id:\"001\",\r\n            NovelName:\"Second Novel\",\r\n            Chapters:[{Id:\"001\", Name:\"Chapter 1\"},{Id:\"002\", Name:\"Chapter 2\"},{Id:\"003\", Name:\"Chapter 3\"},{Id:\"004\", Name:\"Chapter 5\"}]\r\n        },\r\n        {\r\n            Id:\"001\",\r\n            NovelName:\"Third Novel\",\r\n            Chapters:[{Id:\"001\", Name:\"Chapter 1\"},{Id:\"002\", Name:\"Chapter 2\"},{Id:\"003\", Name:\"Chapter 3\"},{Id:\"004\", Name:\"Chapter 5\"}]\r\n        }\r\n    ],\r\n    ActiveNovel: {\r\n        Name: \"Novel Name\",\r\n        CreatedOn: \"Date\",\r\n        Chapters: [\r\n            {\r\n                Id: \"001\",\r\n                Name: \"Chapter 1\",\r\n                CreatedOn: \"Date\",\r\n                LastEdited: \"Date\",\r\n                Content: \"Chapter Content\"\r\n            },\r\n            {\r\n                Id: \"002\",\r\n                Name: \"Chapter 2\",\r\n                CreatedOn: \"Date\",\r\n                LastEdited: \"Date\",\r\n                Content: \"Chapter Content\"\r\n            },\r\n            {\r\n                Id: \"003\",\r\n                Name: \"Chapter 3\",\r\n                CreatedOn: \"Date\",\r\n                LastEdited: \"Date\",\r\n                Content: \"Chapter Content\"\r\n            }\r\n        ],\r\n        Plots: [{\r\n            Id: \"001\",\r\n            Name: \"Plot Name\",\r\n            Content: \"Plot Content\"\r\n        }\r\n        ],\r\n        Trackers: [\r\n            {\r\n                Id:\"001\",\r\n                TrackerName: \"Tracker Name\",\r\n                Elements: [\r\n                    {\r\n                        Id:\"001\",\r\n                        Content:{}\r\n                    }]\r\n            }]\r\n    },\r\n    ActiveChapter: {}\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => { \r\n    switch(action.type){\r\n        case AddNovel:\r\n            return Object.assign({}, state, {});\r\n        case GetNovelNames:\r\n            return Object.assign({}, state, {\r\n                NovelsList: state.AllNovels.map((val) => {return val.NovelName})\r\n            });\r\n        case GetAllNovels:\r\n            return Object.assign({}, state, {\r\n                AllNovels: state.AllNovels\r\n            });\r\n        case GetNovelStats:\r\n            return Object.assign({}, state, {});\r\n        case GetNovel:\r\n            return Object.assign({}, state, {\r\n                Novel: state.ActiveNovel\r\n            });\r\n        case DeleteNovel:\r\n            return Object.assign({}, state, {\r\n                AllNovels: state.AllNovels.filter((val) => {return val.Id != action.NovelId})\r\n            });\r\n        case GetChapter:\r\n            return Object.assign({}, state, {\r\n                ActiveChapter: {...state.ActiveNovel.Chapters}.filter((val) => {return val.Id === action.ChapterId})\r\n            });\r\n        case AddChapter:\r\n            return {...state.ActiveNovel,\r\n                        Chapters: \r\n                        [...state.ActiveNovel.Chapters,\r\n                            {\r\n                                Id: \"001\",\r\n                                Name: \"Chapter 1\",\r\n                                CreatedOn: \"Date\",\r\n                                LastEdited: \"Date\",\r\n                                Content: \"Chapter Content\"\r\n                            }\r\n                        ]\r\n                    };\r\n        case UpdateChapter:\r\n            return Object.assign({}, state, {});\r\n        case DeleteChapter:\r\n            return Object.assign({}, state, {});\r\n        case AddPlot:\r\n            return Object.assign({}, state, {});\r\n        case GetPlot:\r\n            return Object.assign({}, state, {});\r\n        case UpdatePlot:\r\n            return Object.assign({}, state, {});\r\n        case DeletePlot:\r\n            return Object.assign({}, state, {});\r\n        case AddTracker:\r\n            return Object.assign({}, state, {});\r\n        case AddTrackerElement:\r\n            return Object.assign({}, state, {});\r\n        case GetTrackerElement:\r\n            return Object.assign({}, state, {});\r\n        case UpdateTrackerElement:\r\n            return Object.assign({}, state, {});\r\n        case DeleteTracker:\r\n            return Object.assign({}, state, {});\r\n        case DeleteTrackerElement:\r\n            return Object.assign({}, state, {});\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default Reducer;","import {UpdatePreferences, GetPreferences} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    WritingMode: \"Day/Night\",\r\n    FontSize: \"22px\",\r\n    CurseWords: true,\r\n    AutoIndent: true,\r\n    AutoFill: true,\r\n    ChapNumbers: true\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => { \r\n    switch(action.type){\r\n        case UpdatePreferences:\r\n            return Object.assign({}, state, {});\r\n        case GetPreferences:\r\n            return Object.assign({}, state, {});\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default Reducer;","import {GetUser, ChangePassword, SignOut} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    UserId: \"User Id\",\r\n    UserName: \"name\",\r\n    UserEmail: \"email\"\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => { \r\n    switch(action.type){\r\n        case GetUser:\r\n            return Object.assign({}, state, {});\r\n        case ChangePassword:\r\n            return Object.assign({}, state, {});\r\n        case SignOut:\r\n            return Object.assign({}, state, {});\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default Reducer;","import {ToggleSideBar, OpenSideElement, GotoNovel, GotoDashboard, DashboardNav} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    SideMenuVisible: true,\r\n    SideElementVisible: true,\r\n    CurrentPage: \"Novel\",\r\n    CurrentOption: \"Preferences\",\r\n    CurrentNovel: \"Novel Name\"\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => { \r\n    switch(action.type){\r\n        case ToggleSideBar:\r\n            return Object.assign({}, state, {\r\n                SideMenuVisible: !state.SideMenuVisible\r\n            });\r\n        case OpenSideElement:\r\n            return Object.assign({}, state, {\r\n                SideElementVisible: !state.SideElementVisible\r\n            });\r\n        case GotoNovel:\r\n            return Object.assign({}, state, {\r\n                CurrentPage: \"Novel\"\r\n            });\r\n        case GotoDashboard:\r\n            return Object.assign({}, state, {\r\n                CurrentPage: \"Dashboard\"\r\n            });\r\n        case DashboardNav:\r\n            return Object.assign({}, state, {\r\n                CurrentOption: action.payload\r\n            });\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default Reducer;","import {combineReducers} from 'redux'\r\nimport NovelReducer from './NovelReducer'\r\nimport PreferencesReducer from './PreferencesReducer'\r\nimport UserReducer from './UserReducer'\r\nimport NavigationReducer from './NavigationReducer'\r\nimport { routerReducer } from 'react-router-redux'\r\n\r\n\r\nexport default combineReducers({\r\n    Novels: NovelReducer,\r\n    Preferences: PreferencesReducer,\r\n    User: UserReducer,\r\n    Navigation: NavigationReducer,\r\n    routing: routerReducer\r\n});","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from '../reducers/Index'\r\nimport {routerMiddleware} from 'react-router-redux'\r\nimport createHistory from 'history/createBrowserHistory'\r\n\r\nconst store = createStore(combineReducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './Store/Index';\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}